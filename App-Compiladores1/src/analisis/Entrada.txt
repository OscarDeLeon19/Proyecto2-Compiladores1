Void Principal():
	DibujarEXP(1+2+3+4+5+6)
	DibujarEXP(5/96*5+25/85+65.000)
	DibujarEXP(2*504545)
	DibujarAST(funcionMetodo1)
	String cad3 = "CADENAssss"
	funcionMetodo1(100,100)
	Mostrar("Funcion: {0}",funcionMetodo2(10,200))
	Mostrar("HOLA esto es prueba {0}",cad3)


Void funcionMetodo1(Int num3, Int num4):
	Para (Int i=1;i<=3;++):
		Para (Int j=1;j<=3;++):
			Mostrar("Iteracion con anidacion: {0}",j)

		Mostrar("Este es un: {0}",i)

	Para (Int i=1;i<=3;++):
		Si(i==2):
			Mostrar("I: {0}",i)
			Detener


	Si (10<20):
		Int obo = 0
		Mostrar ("El resultado es menor")
		Para (Int i=1;i<=5;++):
			Mostrar("Iteracion anidada: {0}",i)

		Mientras (obo < 5):
			Mostrar ("Hay esperanzas de de ganar compi1 anidado")
			obo = obo+2

		Si(10>20):
			Mostrar("El resultado es menor anidado")
		Sino:
			Mostrar("El resultado es mayor anidado")

	Sino:
		Mostrar ("El resultado es mayor")
		Para (Int i=1;i<=5;++):
			Mostrar("Iteracion anidada en else: {0}",i)


	Int val1 = 0
	Mientras (val1 < 5):
		Mostrar ("Hay esperanzas de de ganar compi1")
		val1 = val1+1
		Detener

	DibujarTS()
	Mostrar("Suma: {0}",(num3+num4))
	Mostrar("Resta: {0}",(num3-num4))
	Mostrar("Multiplicacion: {0}",(num3*num4))
	Mostrar("Division: {0}",(num3/num4))
	Si(10>20):
		Mostrar("El resultado es menor anidado")
	Sino:
		Mostrar("El resultado es mayor anidado")
		Si(10>5):
			Mostrar("Hola")


	DibujarTS()
	Retorno


Int funcionMetodo2(Int num1, Int num2):
	Int nuevaSuma = num1+num2*num1
	Retorno nuevaSuma





